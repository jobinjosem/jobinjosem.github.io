[ { "title": "Azure Workload Identity on Kubernetes", "url": "/azure/2023/08/24/azure-workload-identity.html", "categories": "Azure", "tags": "azure, kubernetes", "date": "2023-08-24 11:12:22 +0200", "snippet": "Deployed workloads within Kubernetes clusters necessitate Azure AD application credentials or managed identities for accessing Azure AD protected resources, like Azure Key Vault and Microsoft Graph...", "content": "Deployed workloads within Kubernetes clusters necessitate Azure AD application credentials or managed identities for accessing Azure AD protected resources, like Azure Key Vault and Microsoft Graph. Azure AD Pod Identity, previously offered a means to circumvent the requirement for such secrets through the utilization of Azure managed identities.In contrast, Azure AD Workload Identity for Kubernetes seamlessly incorporates the Kubernetes capabilities to establish federation with external identity providers. This method is much more simpler and removes the complexity of AAD Pod Identities.Authentication Sequence using OIDCCourtesy: microsoft.comHow to retrieve the OIDC Issuer URLaz aks show -n myAKSCluster -g \"${RESOURCE_GROUP}\" --query \"oidcIssuerProfile.issuerUrl\" -otsvBy default, the Issuer is set to use the base URL https://{region}.oic.prod-aks.azure.com/{uuid} where the value for {region} matches the location the AKS cluster is deployed in. The value {uuid} represents the OIDC key.OIDC Endpoints {IssuerURL}/.well-known/openid-configuration Also known as the OIDC discovery document. This contains the metadata about the issuer’s configurations. {IssuerURL}/openid/v1/jwks This contains the public signing key(s) that AAD uses to verify the authenticity of the service account token. Create Federated identity credentialaz identity federated-credential create --name ${FEDERATED_IDENTITY_CREDENTIAL_NAME} --identity-name \"${USER_ASSIGNED_IDENTITY_NAME}\" --resource-group \"${RESOURCE_GROUP}\" --issuer \"${AKS_OIDC_ISSUER}\" --subject system:serviceaccount:\"${SERVICE_ACCOUNT_NAMESPACE}\":\"${SERVICE_ACCOUNT_NAME}\" --audience api://AzureADTokenExchangeService Account token mount location/var/run/secrets/azure/tokens/azure-identity-tokenEnvironment Variables AZURE_AUTHORITY_HOST\tThe Azure Active Directory (AAD) endpoint. AZURE_CLIENT_ID\tThe client ID of the AAD application or user-assigned managed identity. AZURE_TENANT_ID\tThe tenant ID of the registered AAD application or user-assigned managed identity. AZURE_FEDERATED_TOKEN_FILE\tThe path of the projected service account token file.Volume injected by the webhook azure-identity-token\tThe projected service account volume. These values can be verified by running kubectl describe pod commandJump pod manifest for verifying service account tokencat &lt;&lt;EOF | kubectl apply -f -apiVersion: v1kind: Podmetadata: name: jump namespace: ${NAMESPACE}spec: containers: - image: smallstep/step-cli name: step-cli command: - /bin/sh - -c - cat /var/run/secrets/tokens/test-token | step crypto jwt inspect --insecure volumeMounts: - mountPath: /var/run/secrets/tokens name: test-token serviceAccountName: ${SERVICE_ACCOUNT_NAME} volumes: - name: test-token projected: sources: - serviceAccountToken: path: test-token expirationSeconds: 3600 audience: testEOFThe jump pod logs will contain the decoded JWTJump pod for verifying access tokenkubectl run az-cli -n default -l \"azure.workload.identity/use=true\" image=mcr.microsoft.com/azure-cli -i -tty --rm --command /usr/bin/env --overrides='{\"spec\": { \"serviceAccount\": \"workload-identity-sa\" }}' -- shaz login --federated-token \"$(cat $AZURE_FEDERATED_TOKEN_FILE)\" --service-principal -u $$AZURE_CLIENT_ID -t $AZURE_TENANT_IDaz account get-access-tokenHow to check the pod is labeledkubectl get pods -A -o json | jq -r '[\"Namespace\", \"Pod-Name\"], (.items[] | select(.metadata.labels.\"azure.workload.identity/use\" == \"true\") | [.metadata.namespace, .metadata.name]) | @tsv' | column -tGet all deployments with the labels onkubectl get deployments --all-namespaces -o json | jq -r '.items[] | select(.spec.template.metadata.labels.\"azure.workload.identity/use\" == \"true\") | \"\\(.metadata.namespace) \\(.metadata.name)\"'Limitations You can only have 20 federated identity credentials per managed identity.BookmarksMicrosoft DocsAzure Workload Identity Gihub PagesDeploy Script" }, { "title": "Unveiling the Construction of This Blog", "url": "/blog/2022/04/12/maintain-a-static-webpage.html", "categories": "blog", "tags": "blog", "date": "2022-04-12 21:12:22 +0200", "snippet": "", "content": "" }, { "title": "WSL Bash customization using oh-my-posh", "url": "/wsl/2022/03/01/oh-my-posh-bash.html", "categories": "WSL", "tags": "wsl, kubernetes", "date": "2022-03-01 10:12:22 +0100", "snippet": "In this post, I will explain how I tweaked my bash prompt in WSL using oh-my-posh. Below are the steps I followed to personalize my bash shell.Install oh-my-posh.sudo wget https://github.com/JanDeD...", "content": "In this post, I will explain how I tweaked my bash prompt in WSL using oh-my-posh. Below are the steps I followed to personalize my bash shell.Install oh-my-posh.sudo wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -O /usr/local/bin/oh-my-poshsudo chmod +x /usr/local/bin/oh-my-poshInstall a font that supports Powerline symbols. Download the Caskaydia Cove Nerd Font. Extract the zip file, select them all and right-click to install. Set the Caskaydia font on the settings of the windows terminal.Navigate to Windows Terminal –&gt; Settings –&gt; Ubuntu –&gt; Appearance –&gt; Font face. Then choose CaskaydiaCove Nerd Font and click save. Get the custom configuration file.mkdir ~/.poshthemesgit clone https://github.com/jobinjosem/oh-my-posh-custom-theme.git ~/.poshthemesConfigure ~/.bashrcAdd the following to ~/.bashrc (could be ~/.profile or ```` depending on your environment)eval \"$(oh-my-posh --init --shell bash --config '~/.poshthemes/mytheme.omp.json')\"Once added, reload your profile for the changes to take effect by running exec bashI got my prompt looks like this after doing these steps.Install kubectx + kubensThis will help to switch between different kubernetes clusters and namespaces, We need to download the kubectx and kubens binaries and install fuzzyfinderwget -LO kubectx.tar.gz https://github.com/ahmetb/kubectx/releases/download/v0.9.4/kubectx_v0.9.4_linux_x86_64.tar.gztar -xvf kubectx.tar.gzchmod +x kubectxmv kubectx /usr/local/bin/wget -LO kubens.tar.gz https://github.com/ahmetb/kubectx/releases/download/v0.9.4/kubens_v0.9.4_linux_x86_64.tar.gztar -xvf kubens.tar.gzchmod +x kubensmv kubens /usr/local/bingit clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf~/.fzf/install Check for newer kubectx and kubens releases before downloading..Create aliasTo enhance your ability to seamlessly transition between different clusters and namespaces, it’s a wise approach to establish aliases. Incorporate the following aliases into your .bashrc filealias x='kubectx'alias n='kubens'source ~/.bashrcAfter adding these aliases, you’ll be able to use x to switch between clusters and n to switch between namespaces, making your interaction with Kubernetes more convenient. A list of available Kubernetes cluster contexts in your kubecfg will be shown.Thanks for reading. Please do share your feedback." } ]
